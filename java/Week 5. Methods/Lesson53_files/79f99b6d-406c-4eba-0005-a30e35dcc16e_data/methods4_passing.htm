<html><head>
<title>Passing Parameters</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<style type="text/css">
<!--
body
{
     font-family: verdana,arial,helvetica,sans-serif;
     background: white;
     color: black;
}

p,th,td,li,ul,ol {
     font-family: verdana,arial,helvetica,sans-serif;
}
h1 
{  
   font-family: Verdana, Arial, Helvetica, sans-serif; 
   color: navy; 
   padding-top: 15px; 
   padding-bottom: 15px; 
   font-size: 36px;
   border: medium #3300CC solid;

   text-align: center;
}
h2 
{
   font-family: Georgia, "Times New Roman", Times, serif;
}
caption
{
   font-weight: bold;
}

code
{
     font-size: 105%;
     font-family: "Courier New",Courier,monospace;
     color: navy;
}

.navbar 
{  
   font-family: Arial, Helvetica, sans-serif; 
   font-size: 12px;
   text-align: center;
}
.code
{
     font-family: "Courier New", Courier, monospace;
     line-height: 133%;
     font-size: 110%;     
     border: thin navy solid;
     padding: 0.5em 0.5em 0.5em 40px;
     color: navy;
     background-color: #CCCCCC;
     margin:  1em 5em 1em 1em;
}
.segment
{
     font-family: "Courier New", Courier, monospace;
     line-height: 133%;
     font-size: 110%;    
     border: thin navy solid;
     padding: 0.5em 0.5em 0.5em 40px;
     color: navy;
     background-color: #FFFF99;
     margin:  1em 5em 1em 1em;
}
.dos 
{
   font-family: "Courier New", Courier, monospace;
   color: #FFFFFF;
   background-color: #000000;
   width: 75%; 
   padding: 3px 1px 7px 7px;
   font-size: 110%;
; margin: 10px  2em
}
.endlesson 
{
   border: medium navy solid;
   margin-right: 5em;
   padding: 1px 5px 5px 10px;
}
.endheader
{
     font-family: Georgia, "Times New Roman", Times, serif;
     color: navy;
     font-weight: bold;
     font-size: 150%;
}
-->
</style>

</head>

<body text="#000000" bgcolor="#FFFFFF">
<h1>Passing Parameters</h1>
<p>&nbsp;</p>
<h2>Pass By Value</h2>
<p>When a method with parameters is called, the <b>values</b> of the parameters 
  are passed - not the parameters themselves. The method can change its copy of 
  the parameters. It can not change the value of the variables in the caller. 
  This is called passing by value. All parameters are passed by value in java.</p>
<p>In the following application, the value 100 is passed to the <code>increment</code> 
  method. The <code>increment</code> method adds 5 to <b>ITS</b> copy. But the 
  value of <code>num</code> in the main method remains 100. There are actually 
  two different variables each with the name, <code>num</code>. </p>
<p>The name in the main method does not have to match then name in the increment 
  method. When it does, there are still two distinct variables.</p>
<p>Look at the code and the output.</p>
<p>&nbsp;</p>
<h3>PassByValueTest</h3>
<p>&nbsp;</p>
<pre class="code">/**This is a java application to demonstrate pass by value
   @author Kathleen O'Brien
*/
public class PassByValueTest
{
   public static void main(String arg[])
   {
      int num = 100;
      System.out.println("The value in main before the method call " + num);
      increment(num);
      System.out.println("The value in main after the method call is " + num);
   }

   /**
      increments the value passed by 5
      @param num the number to increment
   */
   public static void increment(int num)
   {
      num = num + 5;
      System.out.println("The value in the increment method is " + num);
   }
}
}</pre>
<p>&nbsp;</p>
<h3>The Output</h3>
<pre class="dos">The value in main before the method call 100
The value in the increment method is 105
The value in main after the method call is 100</pre>
<p>&nbsp;</p>
<p>Java uses something called the runtime stack. Java uses it to keep track of 
  methods that are executing and provides space for local variables. Each method 
  has its own space with its own local variables on the runtime stack. There is 
  an entry on the runtime stack for the <code>main</code> method, and it contains 
  a local variable <code>num</code>. There is also an entry on the runtime stack 
  for the <code>increment</code> method, and it contains a <b>different</b> local 
  variable that happens to be called <code>num</code>.</p>
<p>&nbsp;</p>
<div class="endlesson">
<p class="endheader">Next</p>
  <p>The Math class contains a bunch of static methods for doing math calculations. 
    We will look at a few of these. And we'll also look at using the Random class 
    to generate random numbers.</p>
 <p>&nbsp;</p>
 </div>


</body></html>