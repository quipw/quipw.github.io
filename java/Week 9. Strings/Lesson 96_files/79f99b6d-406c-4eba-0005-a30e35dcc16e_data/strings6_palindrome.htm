<html><head>
<title>Strings - Palindromes</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<style type="text/css">
<!--
body
{
     font-family: verdana,arial,helvetica,sans-serif;
     background: white;
     color: black;
}

p,th,td,li,ul,ol {
     font-family: verdana,arial,helvetica,sans-serif;
}
h1 
{  
   font-family: Verdana, Arial, Helvetica, sans-serif; 
   color: navy; 
   padding-top: 15px; 
   padding-bottom: 15px; 
   font-size: 36px;
   border: medium #3300CC solid;
   
   
   text-align: center;
}
h2 
{
   font-family: Georgia, "Times New Roman", Times, serif;
}
caption
{
   font-weight: bold;
}

code
{
     font-size: 105%;
     font-family: "Courier New",Courier,monospace;
     color: navy;
}

.navbar 
{  
   font-family: Arial, Helvetica, sans-serif; 
   font-size: 12px;
   text-align: center;
}
.code
{
     font-family: "Courier New", Courier, monospace;
     line-height: 133%;
     font-size: 110%;     
     border: thin navy solid;
     padding: 0.5em 0.5em 0.5em 40px;
     color: navy;
     background-color: #CCCCCC;
     margin:  1em 5em 1em 1em;
}
.segment
{
     font-family: "Courier New", Courier, monospace;
     line-height: 133%;
     font-size: 110%;    
     border: thin navy solid;
     padding: 0.5em 0.5em 0.5em 40px;
     color: navy;
     background-color: #FFFF99;
     margin:  1em 5em 1em 1em;
}
.dos 
{
   font-family: "Courier New", Courier, monospace;
   color: #FFFFFF;
   background-color: #000000;
   width: 75%; 
   padding: 3px 1px 7px 7px;
   font-size: 110%;
; margin: 10px  2em
}
.endlesson 
{
   border: medium navy solid;
   margin-right: 5em;
   padding: 1px 5px 5px 10px;
}
.endheader
{
     font-family: Georgia, "Times New Roman", Times, serif;
     color: navy;
     font-weight: bold;
     font-size: 150%;
}
.box
{
    border: thin black solid;
	padding: 2px 10px 2px 10px;
	
}
-->
</style>
</head>

<body text="#000000" bgcolor="#FFFFFF">

<h1 align="center">Palindrome Application</h1>

<h2 align="left">What is a palindrome?</h2>
<p align="left">A palindrome is a string that reads the same backwards and forwards. 
  "mom", "pop", and "radar" are all one word palindromes. 
  "A man, a plan, a canal, Panama!" is a palindrome, if we ignore case 
  and punctuation. Here is another: "Madam, I'm Adam."</p>
<h2 align="left">Checking for Palindromes</h2>
<p align="left">To determine if a string is a palindrome, we compare the first 
  character with the last and then the second with next to last and so forth. 
  In your textbook, Dr Liang has a program, CheckPalindrome.java, to check if 
  a string is a palindrome. I have two objections to this example, so we will 
  write our own version.</p>
<p align="left">The two problems with this code:</p>
<ol>
  <ol>
    <li>It is not object-oriented. Now that you know about objects, I 
want you 
      to use object-oriented techniques. That means we will write a 
reusable class (called Sentence ) and then write an application to use 
the class 
      to test for palindromes.</li>
    <li>It has a <code>return</code> statement in the middle of a method. Good 
      structured programming requires that methods have one entry and one exit.<br>
    </li>
  </ol>
</ol>
<p align="left">We will write two classes: Sentence and Palindrome. </p>
<p align="left">The <code>Sentence</code> class  will represent a sentence. 
  One thing a <code>Sentence</code> can do (one method) is tell if it is a palindrome. 
  In your homework you will add an additional behavior (a new method) to this 
  class.</p>
<p align="left">&nbsp;</p>
<p align="left">Here is the code for the class.</p>
<h3 align="left">Sentence Class</h3>
<pre class="code">/**
   A class to represent a sentence or string of characters
   @author Kathleen O'Brien
*/
public class Sentence
{
   private String sentence;

   /**
      Constructs a sentence object
      @param text the text of this Sentence
   */
   public Sentence(String text)
   {
      sentence = text;
   }

   /**
      determines if this sentence is a palindrome
      @return true if this Sentence represents a palindrome
            else return false
   */
   public boolean isPalindrome()
   {
      //index of first character in string
      int low = 0;
      //index of last character in string
      int high = sentence.length() -1;

      //flag to indicate if string so far is a palindrome
      boolean match = true;

      /*
         Compare the character at low index to the character
         at high index. If they are not equal, this is not
         a palindrome
         continue as long as there are more char to check
         and all character pairs match so far
      */
       while (low &lt; high &amp;&amp; match)
       {
          if (sentence.charAt(low) != sentence.charAt(high))
          {
             match = false;
          }

          //increment
          low++;
          high--;
       }
       return match;
   }

   /**
     Gets the texts of this Sentence
     @return the text of this Sentence
   */
   public String getSentence()
   {
      return sentence;
   }

   /**
      Sets the text of this Sentence
      @param newText the new text for this Sentence
   */
   public void setSentence(String newText)
   {
      sentence = newText;
   }
}</pre>
<p align="left">&nbsp;</p>
<p align="left">&nbsp;</p>
<p align="left"><br>
  This code won't execute. We can't run it. There is no main method.</p>
<p align="left"><br>
  We need to write an application, instantiate a <code>Sentence</code> object 
  with the <code>String</code> we want to check, and call the object's <code>isPalindrome()</code> 
  method.</p>
<p align="left">&nbsp;</p>
<p align="left">Here is the application.</p>
<h2 align="left">PalindromeTest Class</h2>
<pre class="code">/**
   Application to test the Sentence class
   @author Kathleen O'Brien
*/
public class PalindromeTest
{
   public static void main(String[] args)
   {
      //construct Sentence objects and test for palindrome
      Sentence mySentence = new Sentence("radar");
      printInfo(mySentence);
      mySentence = new Sentence("mom");
      printInfo(mySentence);
      mySentence.setSentence("java");
      printInfo(mySentence);
      mySentence.setSentence("#abs&amp;sba");
      printInfo(mySentence);
   }

   public static void printInfo(Sentence theSentence)
   {
      System.out.print(theSentence.getSentence());

      if (theSentence.isPalindrome())
      {
        System.out.println( " is a palindrome.");
      }
      else
      {
         System.out.println( " is NOT a palindrome.");
      }
   }
}
</pre>
<p align="left">
</p>
<p align="left">&nbsp;</p>
<p align="left">Here is the output.</p>
<h3 align="left">Output</h3>
<pre class="dos">radar is a palindrome.
mom is a palindrome.
java is NOT a palindrome.
#abs&amp;sba is NOT a palindrome.</pre>
<p align="left">&nbsp;</p>
<p align="left">&nbsp;</p>
<div class="endlesson">
  <p class="endheader">Finishing up</p>
  <p>All done with the lesson for this week.</p>
  <p>Be sure to post.</p>
  <p>Return to this Module's Things to Do and complete the work for this lesson.</p>
</div>




</body></html>