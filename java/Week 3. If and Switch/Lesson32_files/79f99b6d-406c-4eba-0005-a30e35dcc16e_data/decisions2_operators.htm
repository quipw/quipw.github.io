<html><head>
<title>Decisions - Operators</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">

<style type="text/css">
<!--
body
{
     font-family: verdana,arial,helvetica,sans-serif;
     background: white;
     color: black;
}

p,th,td,li,ul,ol {
     font-family: verdana,arial,helvetica,sans-serif;
}
h1 
{  
   font-family: Verdana, Arial, Helvetica, sans-serif; 
   color: navy; 
   padding-top: 15px; 
   padding-bottom: 15px; 
   font-size: 36px;
   border: medium #3300CC solid;
   
   
   text-align: center;
}
h2 
{
   font-family: Georgia, "Times New Roman", Times, serif;
}
caption
{
   font-weight: bold;
}

code
{
     font-size: 105%;
     font-family: "Courier New",Courier,monospace;
     color: navy;
}

.navbar 
{  
   font-family: Arial, Helvetica, sans-serif; 
   font-size: 12px;
   text-align: center;
}
.code
{
     font-family: "Courier New", Courier, monospace;
     line-height: 133%;
     font-size: 110%;     
     border: thin navy solid;
     padding: 0.5em 0.5em 0.5em 40px;
     color: navy;
     background-color: #CCCCCC;
     margin:  1em 5em 1em 1em;
}
.segment
{
     font-family: "Courier New", Courier, monospace;
     line-height: 133%;
     font-size: 110%;    
     border: thin navy solid;
     padding: 0.5em 0.5em 0.5em 40px;
     color: navy;
     background-color: #FFFF99;
     margin:  1em 5em 1em 1em;
}
.dos 
{
   font-family: "Courier New", Courier, monospace;
   color: #FFFFFF;
   background-color: #000000;
   width: 75%; 
   padding: 3px 1px 7px 7px;
   font-size: 110%;
; margin: 10px  2em
}
.endlesson 
{
   border: medium navy solid;
   margin-right: 5em;
   padding: 1px 5px 5px 10px;
}
.endheader
{
     font-family: Georgia, "Times New Roman", Times, serif;
     color: navy;
     font-weight: bold;
     font-size: 150%;
}
.box
{
    border: thin black solid;
	padding: 2px 10px 2px 10px;
	
}
.style1 {font-weight: bold}
-->
</style>
</head>

<body bgcolor="#FFFFFF" text="#000000">
<h1 style="font-family: Verdana, Arial, Helvetica, sans-serif; 
   color: navy; 
   padding-top: 15px; 
   padding-bottom: 15px; 
   font-size: 36px;
   border: medium #3300CC solid;

   text-align: center;">Relational Operators</h1>


<p>&nbsp;</p>
<p align="left">We use relational operators to compare primitive data types. Many 
  of these will be familiar from math.</p>
<p align="left">&lt;, &gt;, &gt;=, &lt;=.</p>
<p align="left">Others may be new.</p>
<p align="left">==, !=</p>
<p align="left">&nbsp;</p>
<h2 align="left">The Equality Operator (==)</h2>
<p align="left">The operator we use to test if two values are the same may look 
  strange. We use == to test for equality. Remember 
  that <span class="style1">=</span> is the assignment operator. It puts the value 
  of the right-hand side into the left-hand variable. It puts a value into the "variable box"</p>
<p align="left">But<span class="style1"> ==</span> tests if the two quantities are the same.</p>
<p align="left"><strong>5 == 4 </strong>is a valid boolean expression that evaluates to <code>false</code>.<br>
  <span class="style1">x == 4</span> is a valid boolean expression whose value 
  depends on the value of x. If the box <code>x</code> contains 4, then the expression is <code>true</code>. Otherwise, it is <code>false</code>.<br>
  <span class="style1">5 = 4</span> is a nonsense expression that will result 
  in a compile-time error. (red squiggly line in Eclipse)<br>
  <span class="style1">x = 4</span> is an assignment statement that puts a 4 in 
  the box named x </p>
<p align="left">&nbsp;</p>
<h2 align="left">Inequality Operator (!=)</h2>
<p align="left">To test if two values are unequal, use !=.</p>
<p align="left"><font face="Courier New, Courier, mono">5 != 4 </font>is a valid boolean 
  expression that evaluates to <code>true</code>.<br>
  <font face="Courier New, Courier, mono">x != 4</font> is a valid boolean expression 
  whose value depends on the value of x </p>
<p align="left">&nbsp;</p>
<h2 align="left">Less Than Operator (&lt;) </h2>
<p align="left">The less than operator returns true if the first operator is less than the second</p>
<p align="left"><span class="style1">5 &lt; 4</span> is a valid boolean expression that evaluates to <code>false</code> .</p>
<p align="left">&nbsp; </p>
<h2 align="left">Compound Expressions</h2>
<p align="left">We can also make compound statements using &amp;&amp; for AND 
  and || for OR.</p>
<p align="left">&nbsp;</p>
<p align="left">The following will be true if x is greater than zero and also 
  less than ten. Notice that the whole expression is enclosed in an additional 
  set of parentheses ( ).</p>
<p class="segment"> if ( (x &gt; 0) &amp;&amp; (x &lt; 10) )</p>
<p align="left">&nbsp;</p>
<p> 
</p><p align="left">This expression is true if either x or y is greater than 0.</p>
<p class="segment" align="left"> if ( (x &gt; 0) || (y &gt; 0) ) )
</p><p>

</p><p align="left">An interesting fact about &amp;&amp; and || is that the second 
  expression is not evaluated if the value of the whole expression is known after 
  first expression is evaluated. </p>
<p align="left">In the expression:</p>
<p class="segment">
( (x &gt; 0) &amp;&amp; (x &lt; 10) )</p>
<p>if <code>(x &gt; 0)</code> is false (assume<code> x = -2</code>) then we already 
  know the whole expression will be false because false &amp;&amp; true is still 
  false. So the second expression will not be evaluated. </p>
<p>&nbsp; </p>


<div style="   border: medium navy solid;
   margin-right: 5em;
   padding: 1px 5px 5px 10px;">
<span style="font-family: Georgia, 'Times New Roman', Times, serif;
     color: navy;
     font-weight: bold;
     font-size: 150%;">Next</span>
  <p>Sometimes we want to do something different if the expression is false. We 
    will look at that next. </p>
</div>


</body></html>